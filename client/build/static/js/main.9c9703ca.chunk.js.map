{"version":3,"sources":["utils/GlobalState.js","utils/API.js","pages/Profile.js","components/Nav/index.js","components/Landing/index.js","components/EventList/index.js","pages/Home.js","pages/Login.js","pages/Signup.js","utils/GeoapifySearch.js","pages/NewEvent.js","pages/RSVP.js","App.js","index.js"],"names":["GlobalContext","React","createContext","logged_in","username","id","onUpdate","API","getEvents","axios","get","getEvent","updateEvent","eventData","put","deleteEvent","delete","saveEvent","post","saveUser","userData","getUser","loginUser","logoutUser","Profile","useContext","email","useState","events","setEvents","filteredEvents","setFiltered","useEffect","then","res","console","log","data","filter","event","owner","_id","catch","err","className","Column","size","offset","renderAs","Link","color","to","length","map","index","title","description","Nav","Provider","value","role","Brand","Item","alt","height","src","width","Container","icon","faUser","faPlus","faCalendarDay","align","onClick","window","location","replace","faSignOutAlt","faSignInAlt","faUserPlus","Landing","style","backgroundColor","Header","Body","margin","subtitle","weight","Footer","List","children","Event","Content","href","Home","paddingTop","as","Login","formObject","setFormObject","history","useHistory","handleInputChange","target","name","Field","Label","Control","Input","onChange","type","placeholder","faCheck","faLock","preventDefault","password","push","Signup","kind","Help","faEnvelope","faExclamationTriangle","firstName","lastName","GeoapifySearch","props","apiKey","process","GEO_API_KEY","placeSelect","handleAddressChange","suggestionsChange","CreateEvent","Date","startDate","setStartDate","endDate","setEndDate","venue","setVenue","form","document","getElementById","Textarea","start_date","toLocaleDateString","end_date","properties","formatted","status","reset","colorVariant","RSVP","setEvent","useParams","setOwner","guests","setGuests","newStartDate","toLocaleString","newEndDate","guest","user","comment","onSubmit","label","App","setState","state","exact","path","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.9c9703ca.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst GlobalContext = React.createContext({\r\n  logged_in: false,\r\n  username: \"\",\r\n  id: \"\",\r\n  onUpdate: () => undefined\r\n});\r\n\r\nexport default GlobalContext;\r\n","import axios from \"axios\";\n\nconst API =  {\n  // Gets all events\n  getEvents: function() {\n    return axios.get(\"/api/events\");\n  },\n  // Gets the event with the given id\n  getEvent: function(id) {\n    return axios.get(\"/api/events/\" + id);\n  },\n  //Update event with a given id\n  updateEvent: function(id, eventData) {\n    return axios.put(\"/api/events/\" + id, eventData)\n  },\n  // Deletes the event with the given id\n  deleteEvent: function(id) {\n    return axios.delete(\"/api/events/\" + id);\n  },\n  // Saves a event to the database\n  saveEvent: function(eventData) {\n    return axios.post(\"/api/events\", eventData);\n  },\n //create user\n saveUser: function(userData) {\n  return axios.post(\"/api/users\", userData);\n },\n // find one user with given id\n getUser: function(id) {\n   return axios.get(\"/api/users/\" + id)\n },\n  //log in\n loginUser: function(userData) {\n   return axios.post(\"/api/users/login\", userData);\n },\n //log out\n logoutUser: function() {\n   return axios.post(\"/api/users/logout\");\n }\n};\n\nexport default API","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport GlobalContext from '../utils/GlobalState';\r\nimport API from '../utils/API';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Button,\r\n  Media,\r\n  Heading,\r\n  Content,\r\n  Columns,\r\n} from 'react-bulma-components';\r\n\r\nexport default function Profile() {\r\n  const { username, email, id } = useContext(GlobalContext);\r\n  const [events, setEvents] = useState([]);\r\n  const [filteredEvents, setFiltered] = useState(events);\r\n\r\n  useEffect(() => {\r\n    loadEvents();\r\n  },[]);\r\n\r\n  function loadEvents() {\r\n    API.getEvents()\r\n      .then((res) => {\r\n        console.log(res.data);\r\n\r\n        setEvents(res.data);\r\n        const filteredEvents = res.data.filter(\r\n          (event) => event.owner[0]._id === id\r\n        );\r\n\r\n        setFiltered(filteredEvents);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  return (\r\n    <Container className='mt-5'>\r\n      <Columns className='is-multiline'>\r\n        <Columns.Column className='left' size={4} offset={true}>\r\n          <aside className='menu'>\r\n            <ul className='list'>\r\n              <li className='subtitle is-3'>\r\n                Welcome <strong>{username}</strong>\r\n              </li>\r\n              <li className='box'>{email}</li>\r\n            </ul>\r\n          </aside>\r\n          <Button\r\n            renderAs={Link}\r\n            color='link'\r\n            to='/new'\r\n            className='is-link is-block is-alt is-medium'\r\n          >\r\n            Add Event\r\n          </Button>\r\n        </Columns.Column>\r\n\r\n        <Columns.Column size={8}>\r\n          <Box className='content mt-4'>\r\n            <Heading className='h4'>Events:</Heading>\r\n\r\n            {filteredEvents.length ? (\r\n              filteredEvents.map((event, index) => {\r\n                return (\r\n                  <article key={index}>\r\n                    <Heading\r\n                      renderAs={Link}\r\n                      color='link'\r\n                      to={'/events/' + event._id}\r\n                    >\r\n                      {event.title}\r\n                    </Heading>\r\n                    <Media>\r\n                      <div className='media-content'>\r\n                        <Content>\r\n                          <p>{event.description}</p>\r\n                        </Content>\r\n                      </div>\r\n                    </Media>\r\n                  </article>\r\n                );\r\n              })\r\n            ) : (\r\n              <p>No events yet!</p>\r\n            )}\r\n          </Box>\r\n        </Columns.Column>\r\n      </Columns>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport GlobalContext from '../../utils/GlobalState';\r\nimport API from '../../utils/API';\r\nimport { Button, Navbar, Columns, Level, Icon } from 'react-bulma-components';\r\nimport {\r\n  faCalendarDay,\r\n  faPlus,\r\n  faSignInAlt,\r\n  faSignOutAlt,\r\n  faUser,\r\n  faUserPlus,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nfunction Nav() {\r\n  const userData = useContext(GlobalContext);\r\n\r\n  function handleLogout() {\r\n    API.logoutUser()\r\n      .then((res) => {\r\n        if (!res.data.logged_in) {\r\n          userData.onUpdate(res.data);\r\n          window.location.replace(`http://localhost:3000/login`);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider value={userData.logged_in}>\r\n      <header>\r\n        <Navbar role='navigation' aria-label='main navigation'>\r\n          <Navbar.Brand>\r\n            <Navbar.Item renderAs={Link} to='/'>\r\n              <img\r\n                alt='Momentous: a simple community driven events app'\r\n                height='28'\r\n                src='https://user-images.githubusercontent.com/74746211/117521730-20fd6580-af64-11eb-9522-6c4a865877c4.png'\r\n                width='38'\r\n              />\r\n            </Navbar.Item>\r\n            <Navbar.Container className='navbar-start'>\r\n              {userData.logged_in && (\r\n                <>\r\n                  <Button renderAs={Link} color='primary' to='/profile'>\r\n                    <Icon>\r\n                      <FontAwesomeIcon icon={faUser} />\r\n                    </Icon>\r\n                  </Button>\r\n                  <Button\r\n                    className='ml-3'\r\n                    renderAs={Link}\r\n                    color='link'\r\n                    to='/new'\r\n                  >\r\n                    <Icon>\r\n                      <FontAwesomeIcon icon={faPlus} />\r\n                      <FontAwesomeIcon icon={faCalendarDay} />\r\n                    </Icon>\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </Navbar.Container>\r\n          </Navbar.Brand>\r\n          <Navbar.Container className='navbar-end' align='end'>\r\n            {userData.logged_in && (\r\n              <>\r\n                <Button\r\n                  renderAs={Link}\r\n                  onClick={handleLogout}\r\n                  color='light'\r\n                  to='/logout'\r\n                >\r\n                  <Icon>\r\n                    <FontAwesomeIcon alt='Logout' icon={faSignOutAlt} />\r\n                  </Icon>\r\n                </Button>\r\n              </>\r\n            )}\r\n            {!userData.logged_in && (\r\n              <Level.Item>\r\n                <Columns>\r\n                  <Columns.Column>\r\n                    <Button renderAs={Link} color='link' to='/login'>\r\n                      <Icon>\r\n                        <FontAwesomeIcon alt='Login' icon={faSignInAlt} />\r\n                      </Icon>\r\n                    </Button>\r\n                  </Columns.Column>\r\n                  <div\r\n                    className='divider is-vertical is-light'\r\n                    align='vcentered'\r\n                    color='light'\r\n                  >\r\n                    OR\r\n                  </div>\r\n                  <Columns.Column>\r\n                    <Button renderAs={Link} color='link' to='/signup'>\r\n                      <Icon>\r\n                        <FontAwesomeIcon alt='Signup' icon={faUserPlus} />\r\n                      </Icon>\r\n                    </Button>\r\n                  </Columns.Column>\r\n                </Columns>\r\n              </Level.Item>\r\n            )}\r\n          </Navbar.Container>\r\n        </Navbar>\r\n      </header>\r\n    </GlobalContext.Provider>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport { Hero, Container, Heading, Block, Image } from \"react-bulma-components\";\r\n\r\n export default function Landing() {\r\n\r\n    return(\r\n       <>\r\n  <Hero size='fullheight' color='dark' style={{backgroundColor:\"#1A237E\"}} >\r\n    \r\n    <Hero.Header>\r\n    </Hero.Header>\r\n    <Hero.Body>\r\n      <Container>\r\n      <Block>\r\n              <Image\r\n                style={{ margin: 'auto' }}\r\n                size={128}\r\n                src='https://user-images.githubusercontent.com/74746211/117521730-20fd6580-af64-11eb-9522-6c4a865877c4.png'\r\n              />\r\n            </Block>\r\n        <Heading size={2}>\r\n        Momentous\r\n        </Heading>\r\n        \r\n        <Heading\r\n          size={4}\r\n          subtitle\r\n          weight='light'\r\n        >\r\n          BRINGING PEOPLE TOGETHER FOR A MOMENTOUS OCCASION!\r\n        </Heading>\r\n        </Container>\r\n    </Hero.Body>\r\n    <Hero.Footer >\r\n     vv Join events arrow down vv\r\n    </Hero.Footer>\r\n\r\n    </Hero>\r\n   </>\r\n    );\r\n  \r\n }\r\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Container, Card, Media, Heading, Content, Tile } from 'react-bulma-components';\n\nexport function List({ children }) {\n  return (\n    <Container className='columns is-multiline' >\n           {children}\n    </Container>\n  );\n}\n\nexport function Event({\nindex,\n  title,\n  description,\n  id,\n// owner,\n// firstName,\n// lastName\n}\n) {\n                   return(  \n               <Tile >      \n              <Card  className='is-one-third'  style={{ margin: 'auto' }} key={index}>\n        <Card.Content>\n      <Media>\n            <Media.Item>\n          <Heading size={4}>\n        <Link to={'/events/' + id}>{title}</Link>\n          </Heading>\n          <Heading subtitle size={6}>\n           Hosted by:\n           {/* {owner.firstName} {owner.LastName} */}\n          </Heading>\n        </Media.Item>\n      </Media>\n      <Content>\n      {description}\n               <br />\n        </Content>\n      <a href=\"/\">RSVP</a>\n\n    </Card.Content>\n  </Card>\n  </Tile>\n  )\n}","import React, {useEffect, useState} from 'react'\r\nimport { Container, Heading } from 'react-bulma-components';\r\nimport Landing from '../components/Landing';\r\nimport { List, Event } from '../components/EventList';\r\nimport API from '../utils/API';\r\n\r\nexport default function Home() {\r\n    const [events, setEvents] = useState([])\r\n\r\n    useEffect(() => {\r\n        loadEvents()\r\n    }, [])\r\n  \r\n    function loadEvents() {\r\n        API.getEvents()\r\n            .then(res => {\r\n                setEvents(res.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })}\r\n\r\n       return(\r\n        <>\r\n<Landing/>\r\n\r\n<Container>\r\n{events.length ? (\r\n<List className='is-multiline'>\r\n\r\n{events.map((event, index) => (\r\n    <Event\r\n    key={index}\r\n    event={event}\r\n    title={event.title}\r\n    description={event.description}\r\n    id={event._id}\r\n\r\n    >\r\n    </Event>\r\n))}\r\n</List>\r\n) : (\r\n          <Heading style={{ paddingTop: 30 }} as='h3'>\r\n            No events yet!\r\n          </Heading>\r\n        )}\r\n</Container>\r\n\r\n</>\r\n    );\r\n}","import React, { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Form,\r\n  Button,\r\n  Icon,\r\n  Block,\r\n  Image,\r\n  Box,\r\n  Heading,\r\n  Container,\r\n} from 'react-bulma-components';\r\nimport { faCheck, faLock, faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport API from '../utils/API';\r\nimport GlobalContext from '../utils/GlobalState';\r\n\r\nfunction Login() {\r\n    const [formObject, setFormObject] = useState({})\r\n    const userData = useContext(GlobalContext)\r\n    const history = useHistory()\r\n    function handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        setFormObject({...formObject, [name]: value})\r\n      };\r\n\r\n    function handleFormSubmit(event) {\r\n        event.preventDefault();\r\n        API.loginUser({\r\n            username: formObject.username,\r\n            password: formObject.password\r\n        })\r\n        .then(res => {\r\n            if (res.data.logged_in ){\r\n                //can use context now\r\n                userData.onUpdate(res.data)\r\n                history.push(\"/profile\")\r\n            }\r\n        }) \r\n    };\r\n    return (\r\n        <Container \r\n        backgroundColor='link'\r\n               >\r\n                 <Block\r\n              backgroundColor='link'\r\n              style={{ margin: '1rem' }}> </Block>\r\n          \r\n          <Box style={{ width: 400, margin: 'auto' }}>\r\n            <Heading style={{ margin: '1rem' }} subtitle size={3}>\r\n              Login\r\n            </Heading>\r\n            <Block>\r\n              <Image\r\n                style={{ margin: 'auto' }}\r\n                size={128}\r\n                src='https://user-images.githubusercontent.com/74746211/117521730-20fd6580-af64-11eb-9522-6c4a865877c4.png'\r\n              />\r\n            </Block>\r\n            <Block>Please login to proceed.</Block>\r\n            <form>\r\n           \r\n            <Form.Field>\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control>\r\n                <Form.Input\r\n                  onChange={handleInputChange}\r\n                  type='text'\r\n                  placeholder='Username'\r\n                  name='username'\r\n                />\r\n                <Icon align='left' size='small'>\r\n                <FontAwesomeIcon icon={faUser}/>                 \r\n                </Icon>\r\n                <Icon align='right' size='small'>\r\n                <FontAwesomeIcon icon={faCheck}/>\r\n                </Icon>\r\n              </Form.Control>\r\n            </Form.Field>\r\n           \r\n            <Form.Field>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control>\r\n                <Form.Input\r\n                  onChange={handleInputChange}\r\n                  placeholder='Password'\r\n                  type='password'\r\n                  name='password'\r\n                />\r\n                <Icon align='left' size='small'>\r\n                <FontAwesomeIcon icon={faLock}/>\r\n                </Icon>\r\n                <Icon align='right' size='small'>\r\n                <FontAwesomeIcon icon={faCheck}/>\r\n                </Icon>\r\n              </Form.Control>\r\n            </Form.Field>\r\n           \r\n            </form>\r\n            <Button color='primary' type='submit' onClick={handleFormSubmit}>\r\n              Submit\r\n            </Button>\r\n          </Box>\r\n        </Container>\r\n      );\r\n    }\r\n    \r\n    export default Login;\r\n    ","import React, { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Form,\r\n  Button,\r\n  Icon,\r\n  Block,\r\n  Image,\r\n  Box,\r\n  Heading,\r\n  Container,\r\n} from 'react-bulma-components';\r\nimport { faCheck, faEnvelope, faExclamationTriangle, faLock, faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport API from '../utils/API';\r\nimport GlobalContext from '../utils/GlobalState';\r\n\r\nfunction Signup() {\r\n    const [formObject, setFormObject] = useState({})\r\n    const userData = useContext(GlobalContext)\r\n    let history = useHistory()\r\n\r\n    function handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        setFormObject({...formObject, [name]: value})\r\n      };\r\n\r\n    function handleFormSubmit(event) {\r\n        event.preventDefault();\r\n        API.saveUser({\r\n            username: formObject.username,\r\n            firstName: formObject.firstName,\r\n            lastName: formObject.lastName,\r\n            password: formObject.password,\r\n            email: formObject.email\r\n        })\r\n        .then(res => {\r\n            if (res.data.logged_in) {\r\n            userData.onUpdate(res.data)\r\n            console.log(\"saving the user\")\r\n            history.push(\"/profile\")\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    };\r\n    return (\r\n        <Container \r\n        backgroundColor='link'\r\n               >\r\n                 <Box\r\n              backgroundColor='link'> </Box>\r\n          \r\n          <Box style={{ width: 700, margin: 'auto' }}>\r\n            <Heading style={{ margin: '1rem' }} subtitle size={3}>\r\n              Signup\r\n            </Heading>\r\n            <Block>\r\n              <Image\r\n                style={{ margin: 'auto' }}\r\n                size={128}\r\n                src='https://user-images.githubusercontent.com/74746211/117521730-20fd6580-af64-11eb-9522-6c4a865877c4.png'\r\n              />\r\n            </Block>\r\n            <Block>Please signup to proceed.</Block>\r\n            <form>\r\n            <Form.Field kind='group'>\r\n              <Form.Label>First Name</Form.Label>\r\n              <Form.Control>\r\n                <Form.Input\r\n                  onChange={handleInputChange}\r\n                  type='text'\r\n                  placeholder='First Name'\r\n                  name='firstName'\r\n                />\r\n              </Form.Control>\r\n           \r\n              <Form.Label>Last Name</Form.Label>\r\n              <Form.Control>\r\n                <Form.Input\r\n                  onChange={handleInputChange}\r\n                  type='text'\r\n                  placeholder='Last Name'\r\n                  name='lastName'\r\n                />\r\n              </Form.Control>\r\n            </Form.Field>\r\n\r\n            <Form.Field>\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control>\r\n                <Form.Input\r\n                  color=\"success\"\r\n                  onChange={handleInputChange}\r\n                  type='text'\r\n                  placeholder='Username'\r\n                  name='username'\r\n                />\r\n                <Icon align='left' size='small'>\r\n                  <FontAwesomeIcon icon={faUser}/>\r\n                </Icon>\r\n                <Icon align='right' size='small'>\r\n                  <FontAwesomeIcon icon={faCheck}/>\r\n                </Icon>\r\n              </Form.Control>\r\n              <Form.Help color=\"success\">This username is available</Form.Help>\r\n            </Form.Field>\r\n\r\n            <Form.Field>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control>\r\n                <Form.Input\r\n                color=\"danger\"\r\n                  onChange={handleInputChange}\r\n                  type='email'\r\n                  placeholder='Email'\r\n                  name='email'\r\n                />\r\n                <Icon align=\"left\" size=\"small\">\r\n                <FontAwesomeIcon icon={faEnvelope}/>\r\n                </Icon>\r\n            <Icon align=\"right\" size=\"small\">\r\n            <FontAwesomeIcon icon={faExclamationTriangle}/>              \r\n            </Icon>\r\n          </Form.Control>\r\n          <Form.Help color=\"danger\">This email is invalid</Form.Help>\r\n            </Form.Field>\r\n\r\n            <Form.Field>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control>\r\n                <Form.Input\r\n                  onChange={handleInputChange}\r\n                  placeholder='Password'\r\n                  type='password'\r\n                  name='password'\r\n                />\r\n                <Icon align='left' size='small'>\r\n                <FontAwesomeIcon icon={faLock}/>\r\n                </Icon>\r\n                <Icon align='right' size='small'>\r\n                <FontAwesomeIcon icon={faCheck}/>\r\n                </Icon>\r\n              </Form.Control>\r\n            </Form.Field>\r\n\r\n            <Form.Control>  \r\n            <Button color='success' type='submit' onClick={handleFormSubmit}>\r\n              Submit\r\n            </Button>\r\n            </Form.Control>\r\n\r\n            </form>\r\n          </Box>\r\n        </Container>\r\n      );\r\n    }\r\n    \r\n    export default Signup;\r\n    ","import React from 'react'\r\nimport { GeoapifyGeocoderAutocomplete, GeoapifyContext } from '@geoapify/react-geocoder-autocomplete'\r\nimport '@geoapify/geocoder-autocomplete/styles/minimal.css'\r\n\r\n\r\nfunction GeoapifySearch(props) {\r\n  \r\n\r\n    function onPlaceSelect(value) {\r\n\r\n        props.handleAddressChange(value)\r\n      }\r\n    \r\n      function onSuggestionChange(value) {\r\n        console.log(value);\r\n      }\r\n    \r\n      function preprocessHook(value) {\r\n        return `${value}, Munich, Germany`\r\n      }\r\n    \r\n      function postprocessHook(feature) {\r\n        return feature.properties.street;\r\n      }\r\n    \r\n      function suggestionsFilter(suggestions) {\r\n        const processedStreets = [];\r\n    \r\n        const filtered = suggestions.filter(value => {\r\n          if (!value.properties.street || processedStreets.indexOf(value.properties.street) >= 0) {\r\n            return false;\r\n          } else {\r\n            processedStreets.push(value.properties.street);\r\n            return true;\r\n          }\r\n        })\r\n    \r\n        return filtered;\r\n      }\r\n    \r\n      return <GeoapifyContext apiKey={process.env.GEO_API_KEY}>\r\n            <GeoapifyGeocoderAutocomplete\r\n            placeSelect={onPlaceSelect}\r\n            suggestionsChange={onSuggestionChange}\r\n          />\r\n        </GeoapifyContext>\r\n    }\r\n    \r\n    export default GeoapifySearch","import React, { useState, useContext } from 'react'\r\nimport DateTimePicker from 'react-datetime-picker'\r\nimport { Form, Button, Container, Block, Image, Box, Heading } from \"react-bulma-components\"\r\nimport API from '../utils/API';\r\nimport GlobalContext from '../utils/GlobalState';\r\nimport GeoapifySearch from '../utils/GeoapifySearch';\r\n\r\nexport default function CreateEvent() {\r\n    const [formObject, setFormObject] = useState({})\r\n    const [startDate, setStartDate] = useState(new Date())\r\n    const [endDate, setEndDate] = useState(new Date())\r\n    const [venue, setVenue] = useState(\"\")\r\n    const { id } = useContext(GlobalContext);\r\n    const form = document.getElementById(\"eventForm\");\r\n  \r\n    function handleAddressChange(value) {\r\n      setVenue(value)\r\n    }\r\n\r\n    function handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        setFormObject({...formObject, [name]: value})\r\n      };\r\n\r\n    function handleFormSubmit(event) {\r\n        event.preventDefault();\r\n        if (formObject.title && formObject.description) {\r\n \r\n          API.saveEvent({\r\n            title: formObject.title,\r\n            description: formObject.description,\r\n            start_date: startDate.toLocaleDateString(),\r\n            end_date: endDate.toLocaleDateString(),\r\n            owner: id,\r\n            venue: venue.properties.formatted\r\n          })\r\n          .then(res => {\r\n            if (res) {\r\n              console.log(res.status)\r\n            form.reset();}\r\n          })\r\n           .catch(err => console.log(err));\r\n        }\r\n      };\r\n\r\n  return (\r\n    <Container \r\n    backgroundColor='link'\r\n           >\r\n            <Block\r\n              backgroundColor='link'\r\n              style={{ margin: '1rem' }}> </Block>\r\n      \r\n      <Box style={{ width: 750, margin: 'auto' }}>\r\n\r\n        <Block>\r\n          <Image\r\n            style={{ margin: 'auto' }}\r\n            size={128}\r\n            src='https://user-images.githubusercontent.com/74746211/117521730-20fd6580-af64-11eb-9522-6c4a865877c4.png'\r\n          />\r\n        </Block>\r\n        <Block>\r\n        <Heading subtitle size={3}>\r\n          ADD A NEW EVENT\r\n        </Heading>\r\n\r\n        </Block>\r\n\r\n    <form id='eventForm'>\r\n\r\n      <Form.Field>\r\n        <Form.Label>Event Title</Form.Label>\r\n        <Form.Control>\r\n          <Form.Input\r\n             onChange={handleInputChange}\r\n             type=\"text\" \r\n             placeholder=\"event title\" \r\n             name=\"title\"\r\n          />\r\n         </Form.Control>\r\n             </Form.Field>\r\n\r\n             <Form.Field>\r\n             <Form.Label> Select Event Start Date and Time</Form.Label>\r\n             <DateTimePicker value={startDate} onChange={setStartDate} name=\"start_date\" />\r\n             </Form.Field>\r\n\r\n             <Form.Field>\r\n             <Form.Label> Select Event End Date and Time</Form.Label>\r\n                <DateTimePicker value={endDate} onChange={setEndDate} name=\"end_date\" />\r\n                </Form.Field>\r\n                Enter the Event Address\r\n                    <GeoapifySearch type=\"text\" handleAddressChange={handleAddressChange} />\r\n                        <Form.Field>\r\n        <Form.Label>Enter Event Details</Form.Label>\r\n        <Form.Textarea\r\n        onChange={handleInputChange} \r\n        placeholder=\"Add event descriptions and other deatiles about your event.\" \r\n        name=\"description\"\r\n        />\r\n      </Form.Field>  \r\n    \r\n      <Form.Field kind=\"group\">\r\n        <Form.Control>\r\n          <Button color=\"link\"\r\n          type=\"submit\" onClick={handleFormSubmit} \r\n          >Submit</Button>\r\n        </Form.Control>\r\n        <Form.Control>\r\n          <Button \r\n          type='reset'\r\n          color=\"link\" \r\n          colorVariant=\"light\">\r\n            Cancel\r\n          </Button>\r\n        </Form.Control>\r\n      </Form.Field>\r\n    </form>\r\n    </Box>\r\n        </Container>\r\n  );\r\n        }","import React, { useState, useEffect, useContext } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom'\r\nimport { Form, Button, Container, Block, Image, Box, Heading, Section, Media, Content } from \"react-bulma-components\"\r\nimport API from '../utils/API'\r\nimport GlobalContext from '../utils/GlobalState'\r\n\r\nexport default function RSVP(){\r\n    const [event, setEvent] = useState({});\r\n    let { id } = useParams();\r\n  \r\n    const userData = useContext(GlobalContext);\r\n  \r\n    const [owner, setOwner] = useState(\"\");\r\n    const [formObject, setFormObject] = useState({});\r\n    const [guests, setGuests] = useState([]);\r\n\r\n    function handleInputChange(event) {\r\n      const { name, value } = event.target;\r\n      setFormObject({...formObject, [name]: value})\r\n    };\r\n\r\n    useEffect(() => {\r\n        API.getEvent(id)\r\n          .then(res => {\r\n            setOwner(res.data.owner[0])\r\n            setEvent(res.data)})\r\n          .catch(err => console.log(err));\r\n      }, [])\r\n\r\n      const handleRSVP = (event) => {\r\n        event.preventDefault();\r\n        API.getEvent(id)\r\n          .then(res => {\r\n            setGuests(res.data.guests);\r\n         \r\n            API.updateEvent(id, {\r\n               guests: [\r\n                  ...guests,\r\n           {\r\n              user: userData.id,\r\n              comment: formObject.comment\r\n            }\r\n          ]\r\n          })\r\n        })\r\n      }\r\n    let newStartDate = new Date(event.start_date).toLocaleString()\r\n    let newEndDate = new Date(event.end_date).toLocaleString()  \r\n\r\n return (\r\n    <Container \r\n    backgroundColor='link'\r\n           >\r\n            <Block\r\n              backgroundColor='link'\r\n              style={{ margin: '1rem' }}> </Block>\r\n      \r\n      <Box style={{ width: 750, margin: 'auto' }}>\r\n\r\n        <Block>\r\n          <Image\r\n            style={{ margin: 'auto' }}\r\n            size={128}\r\n            src='https://user-images.githubusercontent.com/74746211/117521730-20fd6580-af64-11eb-9522-6c4a865877c4.png'\r\n          />\r\n        </Block>\r\n        <Block>\r\n        <Heading subtitle size={3}>\r\n        {event.title} \r\n        </Heading>\r\n<Heading className='subtitle'>\r\nby {owner.firstName} {owner.lastName}\r\n</Heading>\r\n<Content>\r\n   <time>{newStartDate} </time> to <time> {newEndDate}</time>\r\n   <br />\r\n   <strong>{event.venue} </strong> \r\n    <br />\r\n    {event.description}\r\n        \r\n  </Content>\r\n  \r\n        </Block> \r\n                     \r\n    <hr/>\r\n   \r\n    <Section>\r\n   \r\n      <Media >\r\n\r\n      {event.guests ? \r\n        event.guests.map((guest, index) => {\r\n          return (\r\n\r\n<Media.Item align=\"center\" key={index}>\r\n              <Content>\r\n                <p>\r\n                  <strong>{guest.user.firstName} {guest.user.lastName}</strong>\r\n                  <br />\r\n                  {guest.comment}\r\n                  <br />\r\n                 \r\n                </p>\r\n              </Content>\r\n              </Media.Item>\r\n          )\r\n        })\r\n               \r\n        : <p>No guests yet!</p>}\r\n   </Media>\r\n        <form onSubmit={handleRSVP}>\r\n        \r\n              <Form.Field>\r\n                <Form.Control renderAs=\"p\">\r\n                  <Form.Textarea placeholder=\"Add a comment...\" label=\"comment\" name=\"comment\" onChange={handleInputChange}\r\n        />\r\n                </Form.Control>\r\n              </Form.Field>\r\n              \r\n              <Form.Field>\r\n                <Form.Control renderAs=\"p\">\r\n                \r\n                  <Button color=\"link\"\r\n       type=\"submit\"\r\n          >RSVP</Button>\r\n                </Form.Control>\r\n              </Form.Field>\r\n           \r\n            </form>\r\n       \r\n      \r\n      </Section>\r\n      </Box>  \r\n        </Container>\r\n  );\r\n        }\r\n\r\n        \r\n//         <Box>\r\n//         <form onSubmit={handleRSVP}>\r\n//         <a href=\"/\">RSVP</a>\r\n//              <Form.Field>\r\n              \r\n// <Form.Label>Enter a message with your RSVP</Form.Label>\r\n// <Form.Textarea\r\n// label=\"comment\" name=\"comment\" onChange={handleInputChange}\r\n// placeholder=\"Add a message to your RSVP.\" \r\n//    />\r\n// </Form.Field>  \r\n\r\n// <Form.Field kind=\"group\">\r\n// <Form.Control>\r\n// <Button color=\"link\"\r\n// type=\"submit\"\r\n// >RSVP</Button>\r\n// </Form.Control>\r\n// {/* <Form.Control>\r\n// <Button \r\n// type='reset'\r\n// color=\"link\" \r\n// colorVariant=\"light\">\r\n// Cancel\r\n// </Button>\r\n// </Form.Control> */}\r\n// </Form.Field>\r\n// </form>\r\n// </Box>\r\n\r\n\r\n\r\n\r\n        \r\n      //   <Section>\r\n      //   <Box>\r\n      //     <Media renderAs=\"article\">\r\n            \r\n      //       <Media.Item align=\"center\" key={index}>\r\n      //         <Content>\r\n      //           <p>\r\n      //             <strong>{guest.user.firstName} {guest.user.lastName}</strong>\r\n      //             <br />\r\n      //             {guest.comment}\r\n      //             <br />\r\n                 \r\n      //           </p>\r\n      //         </Content>\r\n      //         </Media.Item>\r\n\r\n\r\n      //       <Media.Item align=\"center\">\r\n      //         <Form.Field>\r\n      //           <Form.Control renderAs=\"p\">\r\n      //             <Form.Textarea placeholder=\"Add a comment...\" label=\"comment\" name=\"comment\" onChange={handleInputChange}\r\n      //   />\r\n      //           </Form.Control>\r\n      //         </Form.Field>\r\n      //         <Form.Field>\r\n      //           <Form.Control renderAs=\"p\">\r\n                \r\n      //             <Button color=\"link\"\r\n      //  type=\"submit\"\r\n      //     >RSVP</Button>\r\n      //           </Form.Control>\r\n      //         </Form.Field>\r\n      //       </Media.Item>\r\n      //     </Media>\r\n      //   </Box>\r\n      // </Section>","import React, {useState} from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport GlobalContext from './utils/GlobalState';\nimport { Container } from 'react-bulma-components';\n// import About from './pages/About';\n// import EventList from './pages/EventList';\nimport Profile from './pages/Profile';\nimport Nav from './components/Nav';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport CreateEvent from './pages/NewEvent';\nimport RSVP from './pages/RSVP';\n// import { Footer } from './components/Footer';\n\nfunction App() {\n\n  const [state, setState] = useState({\n    logged_in: false,\n    username: \"\",\n    id: \"\",\n    onUpdate: (userData) => {\n      setState({ ...state, ...userData });\n    }\n  })\n\n  return (\n    <GlobalContext.Provider value={state}>\n    <Router>\n      <Container>\n        <Nav value= {state.logged_in}/>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/login\" component={Login}/>\n            <Route exact path=\"/signup\" component={Signup}/>\n            <Route exact path=\"/new\" component={CreateEvent}/>\n            <Route exact path=\"/profile\" component={Profile}/>\n            <Route exact path=\"/events/:id\" component={RSVP} />\n          </Switch>\n   \n      </Container>\n    </Router>\n    </GlobalContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'bulma/css/bulma.min.css';\nimport App from \"./App\";\n\n\nReactDOM.render(<App />,\n    document.getElementById('root')\n)"],"sourceRoot":""}